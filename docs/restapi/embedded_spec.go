// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Microsservice API responsible about all identities core data",
    "title": "Identities microsservice",
    "version": "0.1.0"
  },
  "host": "identities.dakasa.com",
  "basePath": "/v1",
  "paths": {
    "/chall-recovery": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Checks if who request recovery ticket are the account's owner",
        "parameters": [
          {
            "type": "string",
            "description": "The ticket identity field",
            "name": "ticket",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "New account password",
            "name": "password",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "A random validation integer. The number get's a range between 100000 ~ 999999",
            "name": "validation",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Recovery account with success"
          },
          "400": {
            "description": "requested body reaches malformed"
          },
          "403": {
            "description": "incorrect validation number"
          },
          "410": {
            "description": "Recovery ticket has been expired"
          },
          "500": {
            "description": "Occurs unexpected internal error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Sign in user",
        "parameters": [
          {
            "type": "string",
            "description": "The user identity field. Can be informed email ou username",
            "name": "user",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "The users password. Used to check if who is attemped to sign in is really the account owner",
            "name": "password",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in with success",
            "headers": {
              "X-JWT": {
                "type": "string",
                "description": "Token to grant access to user in restrict services"
              }
            }
          },
          "400": {
            "description": "requested body reaches malformed"
          },
          "403": {
            "description": "users credential are incorrect"
          },
          "500": {
            "description": "Occurs unexpected internal error"
          }
        }
      }
    },
    "/recovery": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Open recovery account process",
        "parameters": [
          {
            "type": "string",
            "description": "The user identity field. Can be informed email, username or phonenumber",
            "name": "user",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created ticket recovery with success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ticket recovery ID",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "requested body reaches malformed"
          },
          "404": {
            "description": "user not found"
          },
          "500": {
            "description": "Occurs unexpected internal error"
          },
          "503": {
            "description": "Email service is unavailable and fails in sent recovery message."
          }
        }
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Sign up user in service",
        "parameters": [
          {
            "type": "string",
            "description": "The users complete name",
            "name": "name",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "The username to be used in project",
            "name": "username",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "email",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "The password is used to log in",
            "name": "password",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "name": "phoneNumber",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "birthday",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "address",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Image or link that will be used to represents avatar users account",
            "name": "avatar",
            "in": "formData"
          }
        ],
        "responses": {
          "201": {
            "description": "Created user with success"
          },
          "400": {
            "description": "The user sent some bad data in form"
          },
          "409": {
            "description": "users with respective email, username or phone number already exists"
          },
          "500": {
            "description": "Unexpected error occurs in internal server"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "APIKeyHeader": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "APIKeyHeader": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Microsservice API responsible about all identities core data",
    "title": "Identities microsservice",
    "version": "0.1.0"
  },
  "host": "identities.dakasa.com",
  "basePath": "/v1",
  "paths": {
    "/chall-recovery": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Checks if who request recovery ticket are the account's owner",
        "parameters": [
          {
            "type": "string",
            "description": "The ticket identity field",
            "name": "ticket",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "New account password",
            "name": "password",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "description": "A random validation integer. The number get's a range between 100000 ~ 999999",
            "name": "validation",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Recovery account with success"
          },
          "400": {
            "description": "requested body reaches malformed"
          },
          "403": {
            "description": "incorrect validation number"
          },
          "410": {
            "description": "Recovery ticket has been expired"
          },
          "500": {
            "description": "Occurs unexpected internal error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Sign in user",
        "parameters": [
          {
            "type": "string",
            "description": "The user identity field. Can be informed email ou username",
            "name": "user",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "The users password. Used to check if who is attemped to sign in is really the account owner",
            "name": "password",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in with success",
            "headers": {
              "X-JWT": {
                "type": "string",
                "description": "Token to grant access to user in restrict services"
              }
            }
          },
          "400": {
            "description": "requested body reaches malformed"
          },
          "403": {
            "description": "users credential are incorrect"
          },
          "500": {
            "description": "Occurs unexpected internal error"
          }
        }
      }
    },
    "/recovery": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Open recovery account process",
        "parameters": [
          {
            "type": "string",
            "description": "The user identity field. Can be informed email, username or phonenumber",
            "name": "user",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created ticket recovery with success",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "The ticket recovery ID",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "requested body reaches malformed"
          },
          "404": {
            "description": "user not found"
          },
          "500": {
            "description": "Occurs unexpected internal error"
          },
          "503": {
            "description": "Email service is unavailable and fails in sent recovery message."
          }
        }
      }
    },
    "/register": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Sign up user in service",
        "parameters": [
          {
            "type": "string",
            "description": "The users complete name",
            "name": "name",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "The username to be used in project",
            "name": "username",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "email",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "The password is used to log in",
            "name": "password",
            "in": "formData",
            "required": true
          },
          {
            "type": "integer",
            "name": "phoneNumber",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "birthday",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "name": "address",
            "in": "formData"
          },
          {
            "type": "string",
            "description": "Image or link that will be used to represents avatar users account",
            "name": "avatar",
            "in": "formData"
          }
        ],
        "responses": {
          "201": {
            "description": "Created user with success"
          },
          "400": {
            "description": "The user sent some bad data in form"
          },
          "409": {
            "description": "users with respective email, username or phone number already exists"
          },
          "500": {
            "description": "Unexpected error occurs in internal server"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "APIKeyHeader": {
      "type": "apiKey",
      "name": "X-API-Key",
      "in": "header"
    }
  },
  "security": [
    {
      "APIKeyHeader": []
    }
  ]
}`))
}
