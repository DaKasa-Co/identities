version: '3'

tasks:
  build-images:
    cmds:
      - docker build . -t identities:0.1.0
      - docker build . -f Dockerfile.database -t database:latest

  test:all:
    dir: functional_tests
    cmds:
      - go test ../...
      - docker-compose up -d 
      - sleep 7
      - cmd: go run test.go
        ignore_error: true
      - docker-compose down
    env:
      DB_NAME: identities
      DB_USER: postgres
      DB_HOST: localhost
      DB_PASSWORD: someAwesomePassword

  test:unit:
    cmds:
      - go test ./...

  test:functional:
    dir: functional_tests
    cmds:
      - docker-compose up -d 
      - sleep 7
      - cmd: go run test.go
        ignore_error: true
      - docker-compose down
    env:
      DB_NAME: identities
      DB_USER: postgres
      DB_HOST: localhost
      DB_PASSWORD: someAwesomePassword

  gen-docs-by-spec:
    dir: docs
    cmds:
      - swagger generate markdown
      - swagger generate server

  up:
    dir: functional_tests
    cmds:
      - docker-compose up

  down:
    dir: functional_tests
    cmds:
      - docker-compose down

  up-k8s:
    cmds:
      - kubectl apply -f platform/database
      - kubectl apply -f platform/kube
      - sleep 5
      - kubectl apply -f platform/istio
      - sleep 5
      - export INGRESS_HOST=$(kubectl -n istio-ingress get service istio-ingressgateway -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
      - export INGRESS_PORT=$(kubectl -n istio-ingress get service istio-ingressgateway -o jsonpath='{.spec.ports[?(@.name=="http2")].port}')
      - echo "URL DE TESTE:" $INGRESS_HOST:$INGRESS_PORT

  down-k8s:
    cmds:
      - kubectl delete -f platform/istio
      - kubectl delete -f platform/kube
      - kubectl delete -f platform/database

  minikube-reload-images:
    cmds:
      - minikube image rm identities:0.1.0
      - minikube image rm database:latest
      - minikube image load identities:0.1.0
      - minikube image load database:latest
